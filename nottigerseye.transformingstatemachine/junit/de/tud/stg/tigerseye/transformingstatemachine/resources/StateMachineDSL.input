	StateMachine m = machine Watch {
			start state reseted {
				entry: output "entering reseted";
		 		exit: output "leaving reseted";
				 transitions {
				 	
				 	 start → running;
				 	 
				     if (variabilityFlag) { 
  					   switchOff → off;
  					 } else {
  					   switchOff → paused;  					 
  					 } 
				 }
			 }
								                            
			 state running {
				entry: output "entering running";
			 	exit: output "leaving running";
				 transitions {
					 split → paused;
					 stop → stopped;
				 }
			 }
								                            
			 state paused {
				entry: output "entering paused";
			 	exit: output "leaving paused";
				 transitions {
					 unsplit → running;
					 stop → Stopped;
				 }
			 }
								                           
			 state stopped {
				entry: output "entering stopped";
			 	exit: output "leaving stopped";
				 transitions {
					 reset → stopped;
					 switchOff → off;
				 }
			 }
								                            
			 state off {
				 entry: output "entering off";
				 exit: output "leaving off";
				 transitions {
					 toEnd → reseted;
				 }	
			 }
		}
			
	m.start();
	m.input("start");
	m.input("split");
	m.input("unsplit");
	m.input("stop");
	m.input("switchOff");
	m.input("toEnd");